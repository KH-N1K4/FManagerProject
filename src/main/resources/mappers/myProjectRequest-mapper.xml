<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="myProjectRequest">
	
		<!-- 프로젝트 의뢰 -->
		<resultMap type="myProjectFreelancerRequest" id="request_rm">												<!-- 프로젝트 의뢰하기 SEQ_PROJECT_REQUEST_NO-->
			<id property="projectRequestNo" column="PROJECT_REQUEST_NO"/>											<!-- 프로젝트 의뢰 번호 -->
			<result property="projectRequestTitle" column="PROJECT_REQUEST_TITLE"/>						<!-- 프로젝트 의뢰 제목 -->
			<result property="projectRequestSummary" column="PROJECT_REQUEST_SUMMARY"/>				<!-- 프로젝트 의뢰 요약 -->
			<result property="projectRequestContent" column="PROJECT_REQUEST_CONTENT"/>				<!-- 프로젝트 의뢰 사항 -->
			<result property="projectRequestBudget" column="PROJECT_REQUEST_BUDGET"/>					<!-- 프로젝트 의뢰 예산 -->
			<result property="projectRequestBudgetString" column="PROJECT_REQUEST_BUDGET_STRING"/>					<!-- 프로젝트 의뢰 예산 -->
			<result property="projectRecruitDate" column="REQUEST_RECRUIT_DATE"/>							<!-- 프로젝트 모집 마감일 -->
			<result property="projectRecruitDateString" column="REQUEST_RECRUIT_DATE_STRING"/>							<!-- 프로젝트 모집 마감일 -->
			<result property="projectWorkDate" column="REQUEST_WORK_DATE"/>										<!-- 프로젝트 작업 마감일 -->
			<result property="projectWorkDateString" column="REQUEST_WORK_DATE_STRING"/>										<!-- 프로젝트 작업 마감일 -->
			<result property="projectWorkPeriod" column="PROJECT_WORK_PERIOD"/>							<!-- 프로젝트 작업기간 -->
			<result property="projectCreateDate" column="PROJECT_REQUEST_CREATE_DATE"/>				<!-- 프로젝트 의뢰 등록일 -->
			<result property="mainCategoryNo" column="MAIN_CATEGORY_NO"/>											<!-- 카테고리1 번호(FK) -->
			<result property="mainCategoryName" column="MAIN_CATEGORY_NAME"/>											<!-- 카테고리1 번호(FK) -->
			<result property="subCategoryNo" column="SUB_CATEGORY_NO" />									<!-- 메인 2카테고리 -->
	    <result property="subCategoryName" column="SUB_CATEGORY_NAME" />
			<result property="thirdCategoryNo" column="THIRD_CATEGORY_NO"/>										<!-- 카테고리3 번호(FK) -->
			<result property="thirdCategoryName" column="THIRD_CATEGORY_NAME"/>										<!-- 카테고리3 번호(FK) -->
			<result property="projectRequestfile" column="REQUEST_FILE_PATH"/>										<!-- 이미지 경로 -->
			
			<result property="clientNo" column="MEMBER_NO"/>																					<!-- 회원 번호(FK)-의뢰인 회원번호 -->
			<result property="proposalNo" column="PROJECT_PROPOSAL_NO"/>															<!-- 프로젝트 제안 번호 SEQUENCE :SEQ_PROJECT_PROPOSAL_NO -->
			<result property="proposalAdoptStatus" column="PROPOSAL_ADOPT_STATUS"/>										<!-- 프로젝트 채택 상태 1:대기중 2:채택 3: 모집마감 -->
			<result property="proposalAdoptStatusString" column="PROPOSAL_ADOPT_STATUS_STRING"/>			<!-- 프로젝트 채택 상태 1:대기중 2:채택 3: 모집마감 -->
			<result property="proposalPrice" column="PROPOSAL_PRICE"/>																<!-- 프로젝트 제안 가격 -->
			<result property="proposalPriceString" column="PROPOSAL_PRICE_STRING"/>										<!-- 프로젝트 제안 가격 -->
			<result property="proposalEditNum" column="PROPOSAL_EDIT_NUM"/>														<!-- 프로젝트 수정 횟수 -->
			<result property="proposalCreateDate" column="PROPOSAL_CREATE_DATE"/>											<!-- 프로젝트 제안 등록일 -->
			<result property="freelancerNo" column="FREELANCER_NO"/>																	<!-- 프리랜서 번호(FK) -->
			<result property="memberNo" column="MEMBER_NO"/>		
			<result property="memberNickName" column="MEMBER_NICKNAME"/>		
			
			<collection property="requestfileList" 
	      javaType="java.util.ArrayList" ofType="RequestFile"
	      select="selectRequestFileList"
	      column="PROJECT_REQUEST_NO"/> 
	      
	    <collection property="proposalList" 
	      javaType="java.util.ArrayList" ofType="MyProject"
	      select="selectProposalList"
	      column="PROJECT_REQUEST_NO"/> 
	      													
		</resultMap>
		
		<resultMap type="RequestFile" id="RequestFile">	
			<id property="requestFileNo" column="REQUEST_FILE_NO"/>	
			<result property="projectRequestNo" column="PROJECT_REQUEST_NO"/>	
			<result property="requestFilePath" column="REQUEST_FILE_PATH"/>	
			<result property="requestFileOrder" column="REQUEST_FILE_ORDER"/>		
		</resultMap>
		
		<resultMap type="MyProject" id="MyProject">	
			<id property="proposalNo" column="PROJECT_PROPOSAL_NO"/>	
			<result property="freelancerNo" column="FREELANCER_NO"/>	
			<result property="projectRequestNo" column="PROJECT_REQUEST_NO"/>	
			<result property="requestFileOrder" column="PROPOSAL_ADOPT_STATUS"/>	
			<result property="proposalEditNum" column="PROPOSAL_EDIT_NUM"/>	
			<result property="proposalPrice" column="PROPOSAL_PRICE"/>	
			<result property="proposalCreateDate" column="PROPOSAL_CREATE_DATE"/>	
		</resultMap>
		
		<!-- 등급 -->
		<resultMap type="myProjectFreelancer" id="freelancer_rm">
			<id property="freelancerNo" column="FREELANCER_NO"/>	
			<result property="gradeNo" column="GRADE_NO"/>
			<result property="gradeName" column="GRADE_NAME"/>
			<result property="gradeSatisfaction" column="SATISFACTION"/>
			<result property="gradeInquityRate" column="INQUIRY_RATE"/>
			<result property="gradeCompletionRate" column="COMPLETION_RATE"/>
			<result property="gradeSaleProceeds" column="SALE_PROCEEDS"/>
			<result property="gradeSaleProceedsString" column="SALE_PROCEEDS_STRING"/>
			<result property="gradeSaleCount" column="SALE_COUNT"/>
			
				<collection property="fieldList" 
	      javaType="java.util.ArrayList" ofType="myProjectFreelancerService"
	      select="selectfieldList"
	      column="FREELANCER_NO"/> 
		</resultMap>
		
		<resultMap type="myProjectFreelancerService" id="field_rm">	
			<id property="freelancerNo" column="FREELANCER_NO"/>	
			<result property="mainCategoryNo" column="MAIN_CATEGORY_NO"/>	
			<result property="mainCategoryName" column="MAIN_CATEGORY_NAME"/>	
		</resultMap>
		
		<!-- 회원신고하기 -->
		<resultMap type="MemberReport2" id="memberReport_rm">
			<id property="reportNo" column="REPORT_NO"/>	
			<id property="membeReportNo" column="MEMBER_REPORT_NO"/>	
			<result property="memberReportTitle" column="MEMBER_REPORT_TITLE"/>
			<result property="memberReportContent" column="MEMBER_REPORT_CONTENT"/>
			<result property="memberReportRequest" column="MEMBER_REPORT_REQUEST"/>
			<result property="memberReportRequestStatus" column="MEMBER_REPORT_REQUEST_STATUS"/><!--  -->
			<result property="memberReportCreateDate" column="MEMBER_REPORT_CREATE_DATE"/>
			<result property="memberReportCreateDateString" column="MEMBER_REPORT_CREATE_DATE_STRING"/>
			<result property="memberReportNo" column="REPORT_MEMBER"/>
			<result property="memberReportedNo" column="REPORTED_MEMBER"/>
			<result property="memberReportAnswerDate" column="MEMBER_REPORT_ANSWER_DATE"/>
			<result property="memberReportAnswerDateString" column="MEMBER_REPORT_ANSWER_DATE_STRING"/>
			<result property="memberReportAnswerMemberNo" column="MEMBER_REPORT_ANSWER_MEMBER_NO"/>
			<result property="memberNickname" column="MEMBER_NICKNAME"/>
			<result property="managerNickname" column="MANAGER_NICKNAME"/>
			<result property="managerProfile" column="MANAGER_PROFILE"/>
			<result property="managerNo" column="MANAGER_NO"/>
			
			<collection property="fileList" javaType="java.util.ArrayList" 
	  	select="selectReportList" ofType="MemberReportFile2" column="MEMBER_REPORT_NO"/>
			
		</resultMap>
		<!-- 회원신고하기 파일-->
		<resultMap type="MemberReportFile2" id="memberReportFile_rm">	
			<id property="reportNo" column="MEMBER_REPORT_NO"/>	
			<result property="memberReportfileNo" column="MEMBER_REPORT_FILE_NO"/>	
			<result property="memberReportfilePath" column="MEMBER_REPORT_FILE_PATH"/>	
			<result property="memberReportfileOther" column="MEMBER_REPORT_FILE_ORDER"/>	
		</resultMap>
		
		<!-- 카태고리 들고오기 -->
		<select id="getCategoryList" resultMap="request_rm">
			SELECT * 
			FROM CATEGORY
		</select>
		<select id="getMainCategoryList" resultMap="request_rm">
			SELECT * 
			FROM MAIN_CATEGORY
		</select>
		<select id="getSubCategoryList" resultMap="request_rm">
			SELECT * 
			FROM SUB_CATEGORY
		</select>
		
		<!-- 프로젝트 의뢰 들고 오기 페이지-->
		<select id="getProjectRequestListCount" resultType="_int">
			SELECT COUNT(*) 
			FROM (SELECT * FROM PROJECT_REQUEST p
				JOIN REQUEST_FILE USING(PROJECT_REQUEST_NO)
				JOIN CATEGORY USING(THIRD_CATEGORY_NO)
				JOIN SUB_CATEGORY USING(SUB_CATEGORY_NO)
				JOIN MAIN_CATEGORY USING(MAIN_CATEGORY_NO)
				JOIN "MEMBER" USING(MEMBER_NO)
				WHERE PROJECT_REQUEST_STATUS = 2
				AND MEMBER_DELETE_FL = 'N'
				<if test="budgetInt1 != 0  and budgetInt1 != null and budgetInt0 !=-10000">
				 AND PROJECT_REQUEST_BUDGET <![CDATA[>=]]> #{budgetInt0}
					AND PROJECT_REQUEST_BUDGET <![CDATA[<]]> #{budgetInt1}
				</if>
				<if test="budgetInt1 == 1000000 and budgetInt0 ==-10000">
					AND PROJECT_REQUEST_BUDGET <![CDATA[>=]]> #{budgetInt1}
				</if>
				ORDER BY PROJECT_REQUEST_CREATE_DATE DESC) p
			WHERE REQUEST_FILE_ORDER =0
			AND PROJECT_REQUEST_DEL_FL ='N'
			<if test="mainCategoryNo !='' and mainCategoryNo!=null and mainCategoryNo != 0">
				 AND MAIN_CATEGORY_NO = #{mainCategoryNo}
			</if>
			<if test="subCategoryNo !='' and subCategoryNo!=null and subCategoryNo != 0">
				 AND SUB_CATEGORY_NO = #{subCategoryNo}
			</if>
			<if test="thirdCategoryNo !='' and thirdCategoryNo!=null and thirdCategoryNo != 0">
				 AND THIRD_CATEGORY_NO = #{thirdCategoryNo}
			</if>
			<if test="listOrder == 1">
				 ORDER BY REQUEST_RECRUIT_DATE---------마감임박순
			</if>
			<if test="listOrder == 0">
				 ORDER BY PROJECT_REQUEST_CREATE_DATE DESC---------최신순
			</if>
		</select>
		
		<!-- 프로젝트 의뢰 들고 오기 -->
		<select id="getProjectRequestList" resultMap="request_rm">
			SELECT p.*,TO_CHAR(PROJECT_REQUEST_BUDGET, 'FM999,999,999,999') PROJECT_REQUEST_BUDGET_STRING
			FROM (SELECT * FROM PROJECT_REQUEST p
				JOIN REQUEST_FILE USING(PROJECT_REQUEST_NO)
				JOIN CATEGORY USING(THIRD_CATEGORY_NO)
				JOIN SUB_CATEGORY USING(SUB_CATEGORY_NO)
				JOIN MAIN_CATEGORY USING(MAIN_CATEGORY_NO)
				JOIN "MEMBER" USING(MEMBER_NO)
				WHERE PROJECT_REQUEST_STATUS = 2
				AND MEMBER_DELETE_FL = 'N'
				<if test="budgetInt1 != 0 and budgetInt1 != null and budgetInt0 !=-10000">
				 	AND PROJECT_REQUEST_BUDGET <![CDATA[>=]]> #{budgetInt0}
					AND PROJECT_REQUEST_BUDGET <![CDATA[<]]> #{budgetInt1}
				</if>
				<if test="budgetInt1 == 1000000 and budgetInt0 ==-10000">
					AND PROJECT_REQUEST_BUDGET <![CDATA[>=]]> #{budgetInt1}
				</if>
				ORDER BY PROJECT_REQUEST_CREATE_DATE DESC) p
			WHERE REQUEST_FILE_ORDER =0
			AND PROJECT_REQUEST_DEL_FL ='N'
			<if test="mainCategoryNo !='' and mainCategoryNo!=null and mainCategoryNo != 0">
				 AND MAIN_CATEGORY_NO = #{mainCategoryNo}
			</if>
			<if test="subCategoryNo !='' and subCategoryNo!=null and subCategoryNo != 0">
				 AND SUB_CATEGORY_NO = #{subCategoryNo}
			</if>
			<if test="thirdCategoryNo !='' and thirdCategoryNo!=null and thirdCategoryNo != 0">
				 AND THIRD_CATEGORY_NO = #{thirdCategoryNo}
			</if>
			<if test="listOrder == 1">
				 ORDER BY REQUEST_RECRUIT_DATE---------마감임박순
			</if>
			<if test="listOrder == 0">
				 ORDER BY PROJECT_REQUEST_CREATE_DATE DESC---------최신순
			</if>
		</select>
		
		<!-- 프로젝트 의뢰 상세 들고오기 -->
		<select id="selectUserRequest" resultMap="request_rm">
		SELECT p.*,TO_CHAR(PROJECT_REQUEST_BUDGET, 'FM999,999,999,999') PROJECT_REQUEST_BUDGET_STRING,
		to_char(REQUEST_RECRUIT_DATE,'YYYY-MM-DD') REQUEST_RECRUIT_DATE_STRING,
		to_char(REQUEST_WORK_DATE,'YYYY-MM-DD') REQUEST_WORK_DATE_STRING 
		FROM (SELECT * FROM PROJECT_REQUEST 
			JOIN "MEMBER" USING(MEMBER_NO)
			JOIN CATEGORY USING(THIRD_CATEGORY_NO)
			JOIN SUB_CATEGORY USING(SUB_CATEGORY_NO)
			JOIN MAIN_CATEGORY USING(MAIN_CATEGORY_NO)
		) p
		WHERE PROJECT_REQUEST_NO=#{projectRequestNo}
		</select>
		
		<!-- 프로젝트 의뢰 상세 들고오기(프로젝트 의뢰의 이미지들) -->
		<select id="selectRequestFileList" resultMap="RequestFile">
		SELECT *
		FROM REQUEST_FILE
		WHERE PROJECT_REQUEST_NO=#{projectRequestNo}
		</select>
		
		<!-- 제안하기 버튼 클릭시 제안 눌렀는지 확인용(프로젝트 제안 목록 들고오기) -->
		<select id="selectProposalList" resultMap="MyProject">
		SELECT *
		FROM PROJECT_PROPOSAL
		WHERE PROJECT_REQUEST_NO=#{projectRequestNo}
		</select>
		
		<!-- 프리랜서 정보 들고 오기(등급) -->
		<select id="selectFreelancerInfo" resultMap="freelancer_rm">
		SELECT FREELANCER_NO,GRADE_NO,GRADE_NAME
		FROM FREELANCER 
		JOIN GRADE USING(GRADE_NO)
		WHERE FREELANCER_NO = #{freelancerNo}
		</select>
		
		<!-- 프리랜서 정보 들고 오기(등급)collation 전문분야 -->
		<select id="selectfieldList" resultMap="field_rm">
		SELECT *
		FROM FIELD
		JOIN MAIN_CATEGORY USING(MAIN_CATEGORY_NO)
		WHERE FREELANCER_NO = #{freelancerNo}
		</select>
		
		<!-- 제안하기 -->
		<insert id="requestDetailSubmit">
		INSERT INTO "PROJECT_PROPOSAL"
		VALUES(SEQ_PROJECT_PROPOSAL_NO.NEXTVAL,DEFAULT,#{proposalpriceInput},#{proposaleditInput},DEFAULT,#{requestNO},#{proposalMemberNo})
		</insert>
		
		<!-- 의뢰 중지 -->
		<update id="requestStopSubmit">
		UPDATE "PROJECT_REQUEST" SET
      PROJECT_REQUEST_DEL_FL = 'Y'
      WHERE PROJECT_REQUEST_NO = #{requestNO}
		</update>
		
		<!-- 제안하기 모집마감으로 상태값 변경 -->
		<update id="requestStopStatus">
		UPDATE "PROJECT_PROPOSAL" SET
		PROPOSAL_ADOPT_STATUS = 3
		WHERE PROJECT_REQUEST_NO =#{requestNO}
		</update>
		
		<!-- 회원 신고하기 1.번-->
    <insert id="memberReportUpdateSet" parameterType="java.util.HashMap" useGeneratedKeys="true">
    <selectKey keyProperty="reportNo" resultType="_int" order="BEFORE">
			SELECT SEQ_MEMBER_REPORT_NO.NEXTVAL FROM DUAL
		</selectKey>
    INSERT INTO "MEMBER_REPORT"
		VALUES(#{reportNo},#{memberReportTitle},#{memberReportContent},NULL,DEFAULT,#{memberReportNo},#{memberReportedNo},DEFAULT,NULL)
    </insert>
    
    <!-- 회원 신고하기 파일 등록하기 2.번-->
    <insert id="insertReportFileListSet" parameterType="list">
		INSERT INTO MEMBER_REPORT_FILE
		SELECT SEQ_MEMBER_REPORT_FILE_NO.NEXTVAL REQUEST_FILE_NO, A.* FROM
		
			<foreach collection="list" item="reportFileList" 
				open="(" close=") A" separator="UNION ALL">
				SELECT #{reportFileList.memberReportfilePath} REQUEST_FILE_PATH,
							 #{reportFileList.memberReportfileOther} MEMBER_REPORT_FILE_ORDER,
					     #{reportFileList.reportNo} MEMBER_REPORT_NO
				FROM DUAL
			</foreach>
		</insert>
		
		<!-- 회원 신고 내역 목록 들고 가기 -->
		<select id="selectUserReportList" resultMap="memberReport_rm">
		SELECT MEMBER_REPORT_NO, MEMBER_REPORT_TITLE, MEMBER_NICKNAME,MEMBER_REPORT_REQUEST,
		       MEMBER_REPORT_CONTENT,
  			   TO_CHAR(MEMBER_REPORT_CREATE_DATE, 'YYYY-MM-DD') MEMBER_REPORT_CREATE_DATE_STRING, 
  			   CASE WHEN MEMBER_REPORT_REQUEST IS NULL THEN '답변 대기'
	                WHEN MEMBER_REPORT_REQUEST IS NOT NULL THEN '답변 완료'
	            END AS MEMBER_REPORT_REQUEST_STATUS      
		FROM (SELECT * FROM MEMBER_REPORT ORDER BY MEMBER_REPORT_CREATE_DATE DESC) 
		JOIN MEMBER ON(MEMBER_NO = REPORT_MEMBER)
		WHERE MEMBER_NO = #{memberNo}
		<if test="inquiryStatus == 2">
		AND MEMBER_REPORT_REQUEST IS NULL
		</if>
		<if test="inquiryStatus == 1">
		AND MEMBER_REPORT_REQUEST IS NOT NULL
		</if>
		<if test='searchQuery != "" and searchQuery != null and searchKey eq "t"'>
		AND MEMBER_REPORT_TITLE LIKE '%${searchQuery}%' 
		</if>
		<if test='searchQuery != "" and searchQuery != null and searchKey eq "c"'>
		AND MEMBER_REPORT_CONTENT LIKE '%${searchQuery}%'
		</if>
		<if test='searchQuery != "" and searchQuery != null and searchKey eq "tc"'>
		AND (MEMBER_REPORT_CONTENT LIKE '%${searchQuery}%' OR MEMBER_REPORT_TITLE LIKE '%${searchQuery}%')
		</if>
		</select>
		
		<!-- 회원 신고 내역 목록 들고 가기 -->
		<select id="getUserReportListCount" resultType="_int">
		SELECT COUNT(*)      
		FROM (SELECT * FROM MEMBER_REPORT ORDER BY MEMBER_REPORT_CREATE_DATE DESC) 
		JOIN MEMBER MEMBER ON(MEMBER_NO = REPORT_MEMBER)
		WHERE MEMBER_NO = #{memberNo}
		<if test="inquiryStatus == 2">
		AND MEMBER_REPORT_REQUEST IS NULL
		</if>
		<if test="inquiryStatus == 1">
		AND MEMBER_REPORT_REQUEST IS NOT NULL
		</if>
		<if test='searchQuery != "" and searchQuery != null and searchKey eq "t"'>
		AND MEMBER_REPORT_TITLE LIKE '%${searchQuery}%' 
		</if>
		<if test='searchQuery != "" and searchQuery != null and searchKey eq "c"'>
		AND MEMBER_REPORT_CONTENT LIKE '%${searchQuery}%'
		</if>
		<if test='searchQuery != "" and searchQuery != null and searchKey eq "tc"'>
		AND (MEMBER_REPORT_CONTENT LIKE '%${searchQuery}%' OR MEMBER_REPORT_TITLE LIKE '%${searchQuery}%')
		</if>
		</select>
		
		<!-- 회원 신고 상세 내역 -->
		<select id="viewUserReportDetail"  parameterType="_int" resultMap="memberReport_rm">
  	  SELECT MEMBER_REPORT_NO, MEMBER_REPORT_TITLE, MEMBER_REPORT_REQUEST, MEMBER_REPORT_CONTENT,
			   MEMBER_NICKNAME,MANAGER_NICKNAME,MANAGER_NO,MANAGER_PROFILE,
	    <![CDATA[
    	CASE  
	      	WHEN SYSDATE - MEMBER_REPORT_ANSWER_DATE < 1/24/60
	      	THEN FLOOR( (SYSDATE - MEMBER_REPORT_ANSWER_DATE) * 24 * 60 * 60 ) || '초 전'
	      	WHEN SYSDATE - MEMBER_REPORT_ANSWER_DATE < 1/24
	      	THEN FLOOR( (SYSDATE - MEMBER_REPORT_ANSWER_DATE) * 24 * 60) || '분 전'
	      	WHEN SYSDATE - MEMBER_REPORT_ANSWER_DATE < 1
	      	THEN FLOOR( (SYSDATE - MEMBER_REPORT_ANSWER_DATE) * 24) || '시간 전'
	      	ELSE TO_CHAR(MEMBER_REPORT_ANSWER_DATE, 'YYYY"년" MM"월" DD"일"')
		END MEMBER_REPORT_ANSWER_DATE_STRING,
		]]>	   	
  		<![CDATA[
    	CASE  
	      	WHEN SYSDATE - MEMBER_REPORT_CREATE_DATE < 1/24/60
	      	THEN FLOOR( (SYSDATE - MEMBER_REPORT_CREATE_DATE) * 24 * 60 * 60 ) || '초 전'
	      	WHEN SYSDATE - MEMBER_REPORT_CREATE_DATE < 1/24
	      	THEN FLOOR( (SYSDATE - MEMBER_REPORT_CREATE_DATE) * 24 * 60) || '분 전'
	      	WHEN SYSDATE - MEMBER_REPORT_CREATE_DATE < 1
	      	THEN FLOOR( (SYSDATE - MEMBER_REPORT_CREATE_DATE) * 24) || '시간 전'
	      	ELSE TO_CHAR(MEMBER_REPORT_CREATE_DATE, 'YYYY"년" MM"월" DD"일"')
		END MEMBER_REPORT_CREATE_DATE_STRING
		]]>	   	
		FROM (SELECT * FROM MEMBER_REPORT ORDER BY MEMBER_REPORT_CREATE_DATE DESC)
		JOIN MEMBER ON (REPORT_MEMBER=MEMBER_NO)
		LEFT JOIN (SELECT MEMBER_NICKNAME MANAGER_NICKNAME,MEMBER.MEMBER_NO MANAGER_NO,MEMBER_PROFILE MANAGER_PROFILE,MEMBER_REPORT_NO
		FROM MEMBER_REPORT 
		LEFT JOIN MEMBER ON MEMBER.MEMBER_NO=MEMBER_REPORT.MEMBER_REPORT_ANSWER_MEMBER_NO) USING(MEMBER_REPORT_NO)
		WHERE MEMBER_REPORT_NO = #{membeReportNo}
		ORDER BY MEMBER_REPORT_CREATE_DATE DESC
  	</select>
  	
  	<!-- 회원 신고 이미지 조회 -->
  	<select id= "selectReportList" resultMap="memberReportFile_rm"> 
  		SELECT * FROM MEMBER_REPORT_FILE
		WHERE MEMBER_REPORT_NO = #{membeReportNo}
		ORDER BY MEMBER_REPORT_FILE_ORDER
  	</select>
</mapper>
