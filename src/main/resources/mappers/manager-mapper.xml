<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="managerMapper">

	<resultMap type="Member2" id="manager_member_rm">
		<id property="memberNo" column="MEMBER_NO" />
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="memberPw" column="MEMBER_PW" />
		<result property="memberTel" column="MEMBER_TEL" />
		<result property="memberNickname" column="MEMBER_NICKNAME" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="memberJob" column="MEMBER_JOB" />
		<result property="memberEnrollDate" column="MEMBER_ENROLL_DATE" />
		<result property="memberDeleteFlag" column="MEMBER_DELETE_FL" />
		<result property="memberProfile" column="MEMBER_PROFILE" />
		<result property="freelancerFlag" column="FREELANCER_FL" />
		<result property="freelancerGrade" column="GRADE_NAME" />
		<result property="memberAuthority" column="AUTHORITY" />
		<result property="memberInterest" column="MEMBER_INTEREST" />
		<result property="regionName" column="REGION_NAME" />
		<result property="freelancerIntroduction" column="FREELANCER_INTRODUCTION" />
		<result property="freelancerPeriod" column="FREELANCER_PERIOD" />
		<result property="freeContactTime1" column="FREE_CONTACT_TIME1" />
		<result property="freeContactTime2" column="FREE_CONTACT_TIME2" />
		<result property="freelancerBankName" column="BANK_NAME" />
		<result property="freelancerAccountNo" column="ACCOUNT_NO" />
	</resultMap>
	
	<resultMap type="ManagerService" id="manager_service_rm">
		<id property="serviceNo" column="SERVICE_NO"/>
		<result property="serviceTitle" column="SERVICE_TITLE" />
		<result property="serviceStatus" column="SERVICE_STATUS" />
		<result property="requestFilePath" column="REQUEST_FILE_PATH" />
		<result property="serviceSummary" column="SERVICE_SUMMARY" />
		<result property="servicePrice" column="SERVICE_PRICE" />
		<result property="serviceEditNum" column="SERVICE_EDIT_NUM" />
		<result property="serviceWorkPeriod" column="SERVICE_WORK_PERIOD" />
		<result property="freelancerNo" column="FREELANCER_NO" />
		<result property="freelancerName" column="MEMBER_NAME" />
		<result property="freelancerImage" column="MEMBER_PROFILE" />
		<result property="thirdCategoryName" column="THIRD_CATEGORY_NAME" />
		<result property="subCategoryName" column="SUB_CATEGORY_NAME" />
		<result property="mainCategoryName" column="MAIN_CATEGORY_NAME" />
		
		<collection property="serviceImageFileList" 
	      javaType="java.util.ArrayList" ofType="com.manager.freelancer.manager.model.vo.ServiceImageFile"
	      select="selectImageFileListService"
	      column="SERVICE_NO"/>
	</resultMap>
	
	      
	 <resultMap type="com.manager.freelancer.manager.model.vo.ServiceImageFile" id="imageFile_rm">
      <id property="imageFileNo" column="REQUEST_FILE_NO"/>
      <result property="imageFilePath" column="REQUEST_FILE_PATH"/>
      <result property="serviceNo" column="SERVICE_NO"/>
   </resultMap>
	
	<resultMap type="Settlement" id="manager_settlement_rm">
		<id property="settlementNo" column="SETTLEMENT_NO"/>
		<result property="tradeNo" column="TRADE_NO" />
		<result property="workStatus" column="WORK_STATUS" />
		<result property="paymentType" column="PAYMENT_TYPE" />
		<result property="paymentDate" column="PAYMENT_DATE" />
		<result property="paymentPrice" column="PAYMENT_PRICE" />
		<result property="serviceTitle" column="SERVICE_TITLE" />
		<result property="userName" column="USER_NAME" />
	</resultMap>
	
	<resultMap type="com.manager.freelancer.manager.model.vo.TradeInfo" id="manager_tradeInfo_rm">
		<id property="tradeNo" column="TRADE_NO" />
		<result property="tradeDate" column="TRADE_DATE" />
		<result property="workPeriod" column="SERVICE_WORK_PERIOD" />
		<result property="serviceEditNum" column="SERVICE_EDIT_NUM" />
		<result property="workEditNum" column="WORK_EDIT_NUM" />
		<result property="cancelInquiryDate" column="CANCEL_INQUIRY_DATE" />
	</resultMap>
	
	
	<resultMap type="com.manager.freelancer.manager.model.vo.ProjectRequest" id="manager_projectRequest_rm">
		<id property="projectRequestNo" column="PROJECT_REQUEST_NO" />
		<result property="projectRequestTitle" column="PROJECT_REQUEST_TITLE" />
		<result property="projectRequestSummary" column="PROJECT_REQUEST_SUMMARY" />
		<result property="projectRequestContent" column="PROJECT_REQUEST_CONTENT" />
		<result property="projectRequestStatus" column="PROJECT_REQUEST_STATUS" />
		<result property="projectRequestBudget" column="PROJECT_REQUEST_BUDGET" />
		<result property="requestRecruitDate" column="REQUEST_RECRUIT_DATE" />
		<result property="requestWorkDate" column="REQUEST_WORK_DATE" />
		<result property="projectWorkPeriod" column="PROJECT_WORK_PERIOD" />
		<result property="MemberNo" column="MEMBER_NO" />
		<result property="MemberName" column="MEMBER_NAME" />
		<result property="requestFilePath" column="REQUEST_FILE_PATH" />
	
	<collection property="requestImageFileList" 
	      javaType="java.util.ArrayList" ofType="com.manager.freelancer.manager.model.vo.RequestImageFile"
	      select="selectImageFileListProject"
	      column="PROJECT_REQUEST_NO"/>
	</resultMap>
	
	      
	 <resultMap type="com.manager.freelancer.manager.model.vo.RequestImageFile" id="imageFile_rm2">
      <id property="imageFileNo" column="REQUEST_FILE_NO"/>
      <result property="imageFilePath" column="REQUEST_FILE_PATH"/>
      <result property="requestFileOrder" column="REQUEST_FILE_ORDER"/>
      <result property="projectRequestNo" column="PROJECT_REQUEST_NO"/>
   </resultMap>
	
	<resultMap type="com.manager.freelancer.manager.model.vo.MemberReport" id="manager_memberReport_rm">
		<id property="memberReportNo" column="MEMBER_REPORT_NO" />
		<result property="memberReportTitle" column="MEMBER_REPORT_TITLE" />
		<result property="memberReportContent" column="MEMBER_REPORT_CONTENT" />
		<result property="memberReportRequest" column="MEMBER_REPORT_REQUEST" />
		<result property="memberReportCreateDate" column="MEMBER_REPORT_CREATE_DATE" />
		<result property="memberReportAnswerDate" column="MEMBER_REPORT_ANSWER_DATE" />
		<result property="reportMemberNo" column="REPORT_MEMBER" />
		<result property="reportedMemberNo" column="REPORTED_MEMBER" />
		<result property="reportMemberName" column="REPORT_MEMBER_NAME" />
		<result property="reportedMemberName" column="REPORTED_MEMBER_NAME" />
		<result property="memberReportAnswerMemberNo" column="MEMBER_REPORT_ANSWER_MEMBER_NO" />
	
		<collection property="reportImageFileList" javaType="java.util.ArrayList" 
	  	select="selectReportImageList" ofType="com.manager.freelancer.manager.model.vo.MemberReportImage" column="MEMBER_REPORT_NO"/>
  	</resultMap>
  	
  	
	 <resultMap type="com.manager.freelancer.manager.model.vo.MemberReportImage" id="reportImageFile_rm">
      <id property="memberReportFileNo" column="MEMBER_REPORT_FILE_NO"/>
      <result property="memberReportFilePath" column="MEMBER_REPORT_FILE_PATH"/>
      <result property="memberReportFileOrder" column="MEMBER_REPORT_FILE_ORDER"/>
      <result property="memberReportNo" column="MEMBER_REPORT_NO"/>
   </resultMap>
   
	<resultMap type="com.manager.freelancer.manager.model.vo.TradeReport" id="manager_tradeReport_rm">
		<id property="tradeReportNo" column="TRADE_REPORT_NO" />
		<result property="tradeNo" column="TRADE_NO" />
		<result property="tradeReportMemberNo" column="TRADE_REPORT_MEMBER_NO" />
		<result property="tradeReportedMemberNo" column="TRADE_REPORTED_MEMBER_NO" />
		<result property="tradeReportContent" column="TRADE_REPORT_CONTENT" />
		<result property="tradeReportFilePath" column="TRADE_REPORT_FILE_PATH" />
		<result property="tradeReportCreateDate" column="TRADE_REPORT_CREATE_DATE" />
		<result property="refundFlag" column="REFUND_FL" />
		<result property="tradeReportTypeNo" column="TRADE_REPORT_TYPE_NO" />
		<result property="tradeReportMemberName" column="TRADE_REPORT_MEMBER_NAME" />
		<result property="tradeReportedMemberName" column="TRADE_REPORTED_MEMBER_NAME" />
	</resultMap>
	
	<resultMap type="ReviewReport" id="manager_reviewReport_rm">
		<id property="reviewReportNo" column="REPORT_NO" />
		<result property="reviewNo" column="REVIEW_NO" />
		<result property="reviewDeleteFlag" column="REVIEW_DEL_FL" />
		<result property="reviewContent" column="REVIEW_CONTENT" />
		<result property="reviewImage" column="REVIEW_IMAGE" />
		<result property="reviewPoint" column="REVIEW_POINT" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="memberName" column="MEMBER_NAME" />
	</resultMap>


	<!-- 프리랜서 등급 조회 -->
	<select id="selectFreelancerGrade" resultType="string">
		SELECT GRADE_NAME
		FROM FREELANCER
		JOIN GRADE USING(GRADE_NO)
		WHERE FREELANCER_NO=#{memberNo}
	</select>

	<!-- 전체 회원 수 조회 -->
	<select id="getMemberListCount" parameterType="string" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
		WHERE MEMBER_DELETE_FL = 'N' 
		
		<if test='value2 eq "N"'>
			AND FREELANCER_FL='N'
		</if>
		<if test='value2 eq "Y"'>
			AND FREELANCER_FL='Y'
		</if>
	</select>


	<!-- 회원 목록 조회 + 페이징 -->
	<select id="selectMemberList" resultMap="manager_member_rm" parameterType="string">
		SELECT MEMBER_NO, MEMBER_NAME, MEMBER_DELETE_FL,
		TO_CHAR(MEMBER_ENROLL_DATE, 'YYYY"년" MM"월" DD"일"') MEMBER_ENROLL_DATE, FREELANCER_FL
		FROM MEMBER
		WHERE MEMBER_DELETE_FL='N'
		AND AUTHORITY=1
		<if test='value2 eq "Y"'>
			AND FREELANCER_FL='Y'
		</if>
		<if test='value2 eq "N"'>
			AND FREELANCER_FL='N'
		</if>
		ORDER BY 1 DESC
	</select>


	


  <!-- 회원 상세 조회 -->
	<select id="selectMemberDetail" resultMap="manager_member_rm">
		SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_PROFILE, MEMBER_TEL, MEMBER_JOB, MEMBER_NICKNAME,
					(SELECT LISTAGG(MAIN_CATEGORY_NO, ',')
						WITHIN GROUP (ORDER BY MAIN_CATEGORY_NO)
						FROM (SELECT DISTINCT MAIN_CATEGORY_NO
									FROM INTEREST I
									WHERE I.MEMBER_NO = M.MEMBER_NO)) MEMBER_INTEREST, FREELANCER_FL
		FROM MEMBER M
		WHERE MEMBER_NO=#{memberNo}
	</select>
	
	<!-- 프리랜서 상세 조회 -->
	<select id="selectFreelancerDetail" resultMap="manager_member_rm">
		SELECT FREELANCER_INTRODUCTION, REGION_NAME, FREELANCER_PERIOD, FREE_CONTACT_TIME1, FREE_CONTACT_TIME2,
					ACCOUNT_NO, BANK_NAME
		FROM FREELANCER
		JOIN REGION USING(REGION_NO)
		JOIN FREELANCER_ACCOUNT USING (FREELANCER_NO)
		JOIN BANK USING (BANK_CODE)
		WHERE FREELANCER_NO=#{memberNo}
	</select>
	
	<!-- 회원 탈퇴 -->
	<update id="managerMemberDelete">
		UPDATE MEMBER SET MEMBER_DELETE_FL = 'Y'
		WHERE MEMBER_NO=#{memberNo}
	</update>
	
	
	<!-- 검색 조건 일치 회원 수 조회 -->
	<select id="getMemberListCount_search" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
		WHERE MEMBER_DELETE_FL='N'
		<if test='value2 eq "Y"'>
			AND FREELANCER_FL='Y'
		</if>
		<if test='value2 eq "N"'>
			AND FREELANCER_FL='N'
		</if>
		<if test='query!=null and query!=""'>
			<choose>
				<when test='key=="no"'>
					AND MEMBER_NO = ${query}
				</when>
				<when test='key=="na"'>
					AND MEMBER_NAME LIKE '%${query}%'
				</when>
			</choose>
		</if>
	</select>
	
	
	<!-- 검색 조건 일치 회원 목록 조회 -->
	<select id="selectMemberList_search" resultMap="manager_member_rm">
		SELECT MEMBER_NO, MEMBER_NAME, MEMBER_DELETE_FL,
		TO_CHAR(MEMBER_ENROLL_DATE, 'YYYY"년" MM"월" DD"일"') MEMBER_ENROLL_DATE, FREELANCER_FL
		FROM MEMBER
		WHERE MEMBER_DELETE_FL='N'
		AND AUTHORITY=1
		<if test='value2 eq "Y"'>
			AND FREELANCER_FL='Y'
		</if>
		<if test='value2 eq "N"'>
			AND FREELANCER_FL='N'
		</if>
		<if test='query!=null and query!=""'>
			<choose>
				<when test='key=="no"'>
					AND MEMBER_NO = ${query}
				</when>
				<when test='		key=="na"'>
					AND MEMBER_NAME LIKE '%${query}%'
				</when>
			</choose>
		</if>
		ORDER BY 1 DESC
	</select>
	
	
	
	
	
	
	
	
	
	<!-- 서비스 수 조회 -->
	<select id="getServiceListCount" resultType="_int">
		SELECT COUNT(*) FROM SERVICE
		WHERE SERVICE_STATUS != 5
	</select>
	
	
	
	<!-- 서비스 목록 조회 -->
	<select id="selectServiceList" resultMap="manager_service_rm">
		SELECT SERVICE_NO, SERVICE_TITLE, SERVICE_STATUS
		FROM SERVICE
		WHERE SERVICE_STATUS != 5
		AND SERVICE_DEL_FL = 'N'
		ORDER BY 1 DESC
	</select>
	
	
	
	<!-- 서비스 상태별 수 조회 -->
	<select id="getServiceListCount2" resultType="_int">
		SELECT COUNT(*) FROM SERVICE
		WHERE SERVICE_STATUS != 5
		AND SERVICE_STATUS = #{status}
	</select>
	
	
	<!-- 서비스 상태별 목록 조회 -->
	<select id="selectServiceList2" resultMap="manager_service_rm">
		SELECT SERVICE_NO, SERVICE_TITLE, SERVICE_STATUS
		FROM SERVICE
		WHERE SERVICE_STATUS != 5
		AND SERVICE_STATUS = #{status}
		AND SERVICE_DEL_FL = 'N'
		ORDER BY 1 DESC
	</select>
	
	<!-- 검색 일치 서비스 수 -->
	<select id="getServiceListCount3" resultType="_int">
		SELECT COUNT(*) FROM SERVICE
		WHERE SERVICE_STATUS != 5
		<if test='status != 0'>
			AND SERVICE_STATUS= #{status}
		</if>
		<if test='query!=null and query!=""'>
			<choose>
				<when test='key=="no"'>
					AND SERVICE_NO = ${query}
				</when>
				<when test='key=="t"'>
					AND SERVICE_TITLE LIKE '%${query}%'
				</when>
				<when test='key=="c"'>
					AND SERNICE_CONTENT LIKE '%${query}%'
				</when>
				<when test='key=="tc"'>
					AND (SERVICE_TITLE LIKE '%${query}%' OR SERNICE_CONTENT LIKE '%${query}%')
				</when>
			</choose>
		</if>
	</select>
	
	<!-- 검색 일치 서비스 목록 -->
	<select id="selectServiceList3" resultMap="manager_service_rm">
		SELECT SERVICE_NO, SERVICE_TITLE, SERVICE_STATUS
		FROM SERVICE
		WHERE SERVICE_STATUS != 5
		AND SERVICE_DEL_FL = 'N'
		<if test='status != 0'>
			AND SERVICE_STATUS= #{status}
		</if>
		<if test='query!=null and query!=""'>
			<choose>
				<when test='key=="no"'>
					AND SERVICE_NO = ${query}
				</when>
				<when test='key=="t"'>
					AND SERVICE_TITLE LIKE '%${query}%'
				</when>
				<when test='key=="c"'>
					AND SERNICE_CONTENT LIKE '%${query}%'
				</when>
				<when test='key=="tc"'>
					AND (SERVICE_TITLE LIKE '%${query}%' OR SERNICE_CONTENT LIKE '%${query}%')
				</when>
			</choose>
		</if>
		ORDER BY 1 DESC
	</select>
	
	
	<!-- 서비스 삭제 -->
	<update id="managerServiceDelete">
		UPDATE SERVICE SET SERVICE_DEL_FL = 'Y'
		WHERE SERVICE_NO=#{serviceNo}
	</update>
	
	
	<!-- 서비스 상세보기 -->
	<select id="managerServiceDetail" resultMap="manager_service_rm">
	SELECT SERVICE_NO,
		FREELANCER_NO, (SELECT MEMBER_NAME FROM "MEMBER" WHERE MEMBER_NO=FREELANCER_NO) MEMBER_NAME,
	   (SELECT MEMBER_PROFILE FROM "MEMBER" WHERE MEMBER_NO=FREELANCER_NO) MEMBER_PROFILE,
	   SERVICE_EDIT_NUM,SERVICE_WORK_PERIOD,SERVICE_CREATE_DATE, THIRD_CATEGORY_NAME, SUB_CATEGORY_NAME, MAIN_CATEGORY_NAME,
		SERVICE_TITLE,SERVICE_SUMMARY,SERVICE_PRICE,SERVICE_DEL_FL, SERVICE_STATUS,
			THIRD_CATEGORY_NO,FREELANCER_NO,REQUEST_FILE_NO,REQUEST_FILE_PATH,MAIN_CATEGORY_NO
		FROM (SELECT * 
			FROM SERVICE
			LEFT JOIN CATEGORY USING(THIRD_CATEGORY_NO)
			LEFT JOIN SUB_CATEGORY USING(SUB_CATEGORY_NO))
			LEFT JOIN MAIN_CATEGORY USING(MAIN_CATEGORY_NO)
		LEFT JOIN (SELECT s.*,
		ROW_NUMBER() OVER (PARTITION BY SERVICE_NO ORDER BY REQUEST_FILE_NO) rum
		FROM SERVICE_FILE s) USING(SERVICE_NO)
		WHERE RUM = 1
		AND SERVICE_DEL_FL='N'
		AND SERVICE_NO=#{serviceNo}
	</select>
	
	<!-- 서비스 이미지 리스트 -->
	<select id="selectImageFileListService" resultMap="imageFile_rm">
		SELECT * FROM SERVICE_FILE
		WHERE SERVICE_NO=#{serviceNo}
	</select>
	
	<!-- 서비스 승인 -->
	<update id="managerServiceApproval">
		UPDATE SERVICE SET SERVICE_STATUS=2 WHERE SERVICE_NO=#{serviceNo}
	</update>
	
	<!-- 서비스 반려 -->
	<update id="managerServiceRestore">
		UPDATE SERVICE SET SERVICE_STATUS=3 WHERE SERVICE_NO=#{serviceNo}
	</update>
	
	
	
	
	
	
	<!-- 전체 계좌 내역 수 조회 -->
	<select id="getTradeListCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*) FROM SETTLEMENT
		<if test='status != 0'>
			WHERE WORK_STATUS= #{status}
		</if>
	</select>
	
	<!-- 계좌 내역 목록 조회 -->
	<select id="selectTradeList" parameterType="_int" resultMap="manager_settlement_rm">
		SELECT TO_CHAR(PAYMENT_DATE, 'YYYY"-"MM"-"DD') PAYMENT_DATE, TRADE_NO, 
					SERVICE_TITLE, WORK_STATUS, MEMBER_NAME AS USER_NAME, PAYMENT_TYPE,
					TO_CHAR(PAYMENT_PRICE, '999,999,999') PAYMENT_PRICE
		FROM SETTLEMENT
		JOIN "MEMBER" ON (MEMBER.MEMBER_NO=SETTLEMENT.USER_NO)
		JOIN TRADE USING (TRADE_NO)
		JOIN SERVICE USING (SERVICE_NO)
		<if test='status != 0'>
			WHERE WORK_STATUS= #{status}
		</if>
		ORDER BY SETTLEMENT_NO DESC
	</select>
	
	<!-- 검색 일치 계좌 내역 수 조회 -->
	<select id="getTradeListCount_search" parameterType="map" resultType="_int">
		SELECT COUNT(*) FROM SETTLEMENT
		<if test='status != 0'>
			WHERE WORK_STATUS= #{status}
		</if>
		<if test='query!=null and query!=""'>
			<choose>
				<when test='status != 0'>
					AND TRADE_NO = ${query}
				</when>
				<when test='status == 0'>
					WHERE TRADE_NO = ${query}
				</when>
			</choose>
		</if>
	</select>
	
	<!-- 검색 일치 계좌 내역 목록 조회 -->
	<select id="selectTradeList_search" parameterType="map" resultMap="manager_settlement_rm">
		SELECT TO_CHAR(PAYMENT_DATE, 'YYYY"년" MM"월" DD"일"') PAYMENT_DATE, TRADE_NO, 
					SERVICE_TITLE, WORK_STATUS, MEMBER_NAME AS USER_NAME, PAYMENT_TYPE,
					TO_CHAR(PAYMENT_PRICE, '999,999,999') PAYMENT_PRICE
		FROM SETTLEMENT
		JOIN "MEMBER" ON (MEMBER.MEMBER_NO=SETTLEMENT.USER_NO)
		JOIN TRADE USING (TRADE_NO)
		JOIN SERVICE USING (SERVICE_NO)
		<if test='status != 0'>
			WHERE WORK_STATUS= #{status}
		</if>
		<if test='query!=0'>
			<choose>
				<when test='status != 0'>
					AND TRADE_NO = ${query}
				</when>
				<when test='status == 0'>
					WHERE TRADE_NO = ${query}
				</when>
			</choose>
		</if>
		ORDER BY SETTLEMENT_NO DESC
	</select>
	
	<!-- 거래 정보 조회 -->
	<select id="selectTradeInfo" resultMap="manager_tradeInfo_rm">
		SELECT TRADE_NO, TO_CHAR(PAYMENT_DATE, 'YYYY"-"MM"-"DD') TRADE_DATE, 
				SERVICE_EDIT_NUM, SERVICE_WORK_PERIOD,
				(SELECT COUNT(*) 
				 FROM WORK 
				 WHERE TRADE_NO=#{trdeNo}) WORK_EDIT_NUM, 
				 (SELECT NVL(MAX(TO_CHAR(TRADE_REPORT_CREATE_DATE, 'YYYY"-"MM"-"DD')), '취소 문의 없음')
				  FROM TRADE_REPORT
				  WHERE TRADE_NO=#{trdeNo} AND TRADE_REPORT_TYPE_NO=2) CANCEL_INQUIRY_DATE
		FROM TRADE
		JOIN SETTLEMENT USING (TRADE_NO)
		JOIN SERVICE USING (SERVICE_NO)
		WHERE TRADE_NO=#{trdeNo}
		AND PAYMENT_TYPE=1
	</select>
	
	<!-- 거래번호로 프리랜서 번호 조회 -->
	<select id="getFreelancerNo" resultType="_int">
	SELECT S.FREELANCER_NO
	FROM TRADE T
	JOIN SERVICE S ON (S.SERVICE_NO=T.SERVICE_NO)
	WHERE T.TRADE_NO=#{tradeNo}
	</select>
	
	<!-- 거래번호로 회원 번호 조회 -->
	<select id="getMemberNo" resultType="_int">
	SELECT MEMBER_NO
	FROM TRADE 
	WHERE TRADE_NO=#{tradeNo}
	</select>
	
	<!-- 거래번호로 가격 조회 -->
	<select id="getPaymentPrice" resultType="_int">
	SELECT SERVICE_PRICE AS PAYMENT_PRICE
	FROM TRADE 
	JOIN SERVICE USING (SERVICE_NO)
	WHERE TRADE_NO=#{tradeNo}
	</select>
	
	
	<!-- 환불하기1 회원 -->
	<insert id="managerRefund1" parameterType="map" useGeneratedKeys="true">
		<selectKey keyProperty="settlementNo" resultType="_int" order="BEFORE">
			SELECT SEQ_SETTLEMENT_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO SETTLEMENT VALUES(
				#{settlementNo}, 3, #{memberNo}, 3, SYSDATE, #{paymentPrice}*(#{refundPercent}/100), #{tradeNo})
	</insert>
	
	<!-- 환불하기2 프리랜서 -->
	<insert id="managerRefund2" parameterType="map" useGeneratedKeys="true">
		<selectKey keyProperty="settlementNo" resultType="_int" order="BEFORE">
			SELECT SEQ_SETTLEMENT_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO SETTLEMENT VALUES(
				#{settlementNo}, 3, #{freelancerNo}, 3, SYSDATE, #{paymentPrice}*((100-#{refundPercent})/100), #{tradeNo})
	</insert>
		
	
	
	<!-- 작업 상태 변경 -->
	<update id="updateStatus">
		UPDATE SETTLEMENT SET WORK_STATUS=3
		WHERE TRADE_NO=#{tradeNo}
	</update>
	
	
	<!-- 정산을 위한 프리랜서 번호 얻기 -->
	<select id="getFreelancerNo2" resultType="_int">
	SELECT S.FREELANCER_NO
	FROM TRADE T
	JOIN SERVICE S ON (S.SERVICE_NO=T.SERVICE_NO)
	WHERE T.TRADE_NO=#{tradeNo}
	</select>
	
	<!-- 정산을 위한 가격 얻기 -->
	<select id="getPaymentPrice2" resultType="_int">
	SELECT SERVICE_PRICE AS PAYMENT_PRICE
	FROM TRADE 
	JOIN SERVICE USING (SERVICE_NO)
	WHERE TRADE_NO=#{tradeNo}
	</select>
	
	<!-- 정산하기 -->
	<insert id="managerCalculate">
		INSERT INTO SETTLEMENT VALUES (
		SEQ_SETTLEMENT_NO.NEXTVAL, 2, #{freelancerNo}, 2, SYSDATE, #{paymentPrice}, #{tradeNo}
		)
	</insert>
	
	
	<!-- 정산 후 작업 상태 변경 -->
	<update id="updateStatusCal">
		UPDATE SETTLEMENT SET WORK_STATUS=2
		WHERE TRADE_NO=#{tradeNo}
	</update>




	<!-- 프로젝트 의뢰 수 조회 -->
	<select id="getRequestCount" resultType="_int">
		SELECT COUNT(*) FROM PROJECT_REQUEST
	</select>

	<!-- 프로젝트 의뢰 목록 조회 -->
	<select id="selectRequestList" resultMap="manager_projectRequest_rm">
		SELECT *
		FROM PROJECT_REQUEST
		WHERE PROJECT_REQUEST_DEL_FL = 'N'
		ORDER BY 1 DESC
	</select>
	
	<!-- 상태별 프로젝트 의뢰 수 조회 -->
	<select id="getRequestCount2" resultType="_int">
		SELECT COUNT(*) FROM PROJECT_REQUEST
		WHERE PROJECT_REQUEST_DEL_FL = 'N'
		<if test='status != 0'>
			AND PROJECT_REQUEST_STATUS= #{status}
		</if>
	</select>

	<!-- 상태별 프로젝트 의뢰 목록 조회 -->
	<select id="selectRequestList2" resultMap="manager_projectRequest_rm">
		SELECT *
		FROM PROJECT_REQUEST
		WHERE PROJECT_REQUEST_DEL_FL = 'N'
		<if test='status != 0'>
			AND PROJECT_REQUEST_STATUS= #{status}
		</if>
		ORDER BY 1 DESC
	</select>
	
	<!-- 검색 시 프로젝트 의뢰 수 조회 -->
	<select id="getRequestCount3" resultType="_int">
		SELECT COUNT(*) FROM PROJECT_REQUEST
		WHERE PROJECT_REQUEST_STATUS=#{status}
		<if test='status != 0'>
			AND PROJECT_REQUEST_STATUS= #{status}
		</if>
		<if test='query!=null and query!=""'>
			<choose>
				<when test='key=="no"'>
					AND PROJECT_REQUEST_NO = ${query}
				</when>
				<when test='key=="t"'>
					AND PROJECT_REQUEST_TITLE LIKE '%${query}%'
				</when>
				<when test='key=="c"'>
					AND PROJECT_REQUESTE_CONTENT LIKE '%${query}%'
				</when>
				<when test='key=="tc"'>
					AND (PROJECT_REQUEST_TITLE LIKE '%${query}%' OR PROJECT_REQUEST_CONTENT LIKE '%${query}%')
				</when>
			</choose>
		</if>
	</select>
	
	<!-- 검색 시 프로젝트 의뢰 목록 조회 -->
	<select id="selectRequestList3" resultMap="manager_projectRequest_rm">
		SELECT *
		FROM PROJECT_REQUEST
		WHERE PROJECT_REQUEST_DEL_FL = 'N'
		<if test='status != 0'>
			AND PROJECT_REQUEST_STATUS= #{status}
		</if>
		<if test='query!=null and query!=""'>
			<choose>
				<when test='key=="no"'>
					AND PROJECT_REQUEST_NO = ${query}
				</when>
				<when test='key=="t"'>
					AND PROJECT_REQUEST_TITLE LIKE '%${query}%'
				</when>
				<when test='key=="c"'>
					AND PROJECT_REQUESTE_CONTENT LIKE '%${query}%'
				</when>
				<when test='key=="tc"'>
					AND (PROJECT_REQUEST_TITLE LIKE '%${query}%' OR PROJECT_REQUEST_CONTENT LIKE '%${query}%')
				</when>
			</choose>
		</if>
		ORDER BY 1 DESC
	</select>

	<!-- 프로젝트 의뢰 삭제 -->	
	<update id="managerRequestDelete">
		UPDATE PROJECT_REQUEST SET PROJECT_REQUEST_DEL_FL='Y'
		WHERE PROJECT_REQUEST_NO=#{projectRequestNo}
	</update>
	
	<!-- 프로젝트 의뢰 상세보기 -->
	<select id="managerRequestDetail" resultMap="manager_projectRequest_rm">
	SELECT PROJECT_REQUEST_NO, MEMBER_NO,
	   PROJECT_WORK_PERIOD,
	   TO_CHAR(REQUEST_RECRUIT_DATE, 'YYYY"-"MM"-"DD') REQUEST_RECRUIT_DATE,
	   TO_CHAR(REQUEST_WORK_DATE, 'YYYY"-"MM"-"DD') REQUEST_WORK_DATE,
	   THIRD_CATEGORY_NAME, SUB_CATEGORY_NAME, MAIN_CATEGORY_NAME,
		PROJECT_REQUEST_TITLE,
		PROJECT_REQUEST_SUMMARY,
		PROJECT_REQUEST_CONTENT,
		PROJECT_REQUEST_BUDGET,PROJECT_REQUEST_DEL_FL, PROJECT_REQUEST_STATUS,
			THIRD_CATEGORY_NO,REQUEST_FILE_NO,REQUEST_FILE_PATH,MAIN_CATEGORY_NO
		FROM (SELECT * 
			FROM PROJECT_REQUEST
			LEFT JOIN CATEGORY USING(THIRD_CATEGORY_NO)
			LEFT JOIN SUB_CATEGORY USING(SUB_CATEGORY_NO))
			LEFT JOIN MAIN_CATEGORY USING(MAIN_CATEGORY_NO)
		LEFT JOIN (SELECT s.*,
		ROW_NUMBER() OVER (PARTITION BY PROJECT_REQUEST_NO ORDER BY REQUEST_FILE_NO) rum
		FROM REQUEST_FILE s) USING(PROJECT_REQUEST_NO)
		WHERE RUM = 1
		AND PROJECT_REQUEST_DEL_FL='N'
		AND PROJECT_REQUEST_NO=#{projectRequestNo}
	</select>
	
	
	<!-- 의뢰 이미지 리스트 -->
	<select id="selectImageFileListProject" resultMap="imageFile_rm2">
		SELECT * FROM REQUEST_FILE
		WHERE PROJECT_REQUEST_NO=#{projectRequestNo}
	</select>

	<!-- 프로젝트 의뢰 승인 -->
	<update id="managerRequestApproval">
		UPDATE PROJECT_REQUEST SET PROJECT_REQUEST_STATUS=2 WHERE PROJECT_REQUEST_NO=#{projectRequestNo} 
	</update>
	
	<!-- 프로젝트 의뢰 반려 -->
	<update id="managerRequestRestore">
	UPDATE PROJECT_REQUEST SET PROJECT_REQUEST_STATUS=3 WHERE PROJECT_REQUEST_NO=#{projectRequestNo} 
	</update>
	
	
	
	
	<!-- 회원 신고 수 -->
	<select id="getMemberReportListCount" resultType="_int">
		SELECT COUNT(*) FROM MEMBER_REPORT
		<if test='status != 0'>
			<choose>
				<when test='status==1'>
					WHERE MEMBER_REPORT_REQUEST IS NULL
				</when>
				<otherwise>
					WHERE MEMBER_REPORT_REQUEST IS NOT NULL
				</otherwise>
			</choose>
		</if>
	</select>
	
	<!-- 회원 신고 내역 목록 -->
	<select id="selectMemberReportList" resultMap="manager_memberReport_rm">
		SELECT MEMBER_REPORT_NO , MEMBER_REPORT_TITLE ,MEMBER_REPORT_CONTENT , MEMBER_REPORT_REQUEST ,
		 TO_CHAR(MEMBER_REPORT_CREATE_DATE, 'YYYY"-"MM"-"DD') MEMBER_REPORT_CREATE_DATE ,
		MEMBER_REPORT_ANSWER_DATE , MEMBER_REPORT_ANSWER_MEMBER_NO, REPORT_MEMBER , REPORTED_MEMBER, 
		MEMBER_NAME AS REPORT_MEMBER_NAME, 
		(SELECT MEMBER_NAME FROM MEMBER WHERE MEMBER_NO=REPORTED_MEMBER) REPORTED_MEMBER_NAME
		FROM MEMBER_REPORT
		JOIN MEMBER ON (MEMBER_NO=REPORT_MEMBER)
		WHERE MEMBER_REPORT_NO != 0
		<if test='status != 0'>
			<choose>
				<when test='status==1'>
					AND MEMBER_REPORT_REQUEST IS NULL
				</when>
				<otherwise>
					AND MEMBER_REPORT_REQUEST IS NOT NULL
				</otherwise>
			</choose>
		</if>
		ORDER BY 1 DESC
	</select>
	
	<!-- 검색 일치 회원 신고 수 -->
	<select id="getMemberReportListCount2" resultType="_int">
		SELECT COUNT(*) 
		FROM (SELECT MEMBER_REPORT_NO , MEMBER_REPORT_TITLE ,MEMBER_REPORT_CONTENT , MEMBER_REPORT_REQUEST , MEMBER_REPORT_CREATE_DATE ,
		MEMBER_REPORT_ANSWER_DATE , MEMBER_REPORT_ANSWER_MEMBER_NO, REPORT_MEMBER , REPORTED_MEMBER, 
		MEMBER_NAME AS REPORT_MEMBER_NAME, 
		(SELECT MEMBER_NAME FROM MEMBER WHERE MEMBER_NO=REPORTED_MEMBER) REPORTED_MEMBER_NAME
		FROM MEMBER_REPORT
		JOIN MEMBER ON (MEMBER_NO=REPORT_MEMBER))
		WHERE MEMBER_REPORT_NO != 0
		<if test='status != 0'>
			<choose>
				<when test='status==1'>
					WHERE MEMBER_REPORT_REQUEST IS NULL
				</when>
				<otherwise>
					WHERE MEMBER_REPORT_REQUEST IS NOT NULL
				</otherwise>
			</choose>
		</if>
		<if test='query != null and query != ""'>
			<choose>
				<when test='key=="t"'>
					AND MEMBER_REPORT_TITLE LIKE '%${query}%'
				</when>
				<when test='key=="c"'>
					AND MEMBER_REPORT_CONTENT LIKE '%${query}%'
				</when>
				<when test='key=="tc"'>
					AND (MEMBER_REPORT_TITLE LIKE '%${query}%' OR MEMBER_REPORT_CONTENT
					LIKE '%${query}%')
				</when>
				<when test='key=="report"'>
					AND REPORT_MEMBER_NAME LIKE '%${query}%'
				</when>
				<otherwise>
					AND REPORTED_MEMBER_NAME LIKE '%${query}%'
				</otherwise>
			</choose>
		</if>
	</select>
	
	
	<!-- 검색 일치 회원 신고 내역 목록 -->
	<select id="selectMemberReportList2" resultMap="manager_memberReport_rm">
		SELECT MEMBER_REPORT_NO , MEMBER_REPORT_TITLE ,MEMBER_REPORT_CONTENT , MEMBER_REPORT_REQUEST , 
		TO_CHAR(MEMBER_REPORT_CREATE_DATE, 'YYYY"-"MM"-"DD') MEMBER_REPORT_CREATE_DATE ,
		MEMBER_REPORT_ANSWER_DATE , MEMBER_REPORT_ANSWER_MEMBER_NO, REPORT_MEMBER , REPORTED_MEMBER, 
		MEMBER_NAME AS REPORT_MEMBER_NAME, 
		(SELECT MEMBER_NAME FROM MEMBER WHERE MEMBER_NO=REPORTED_MEMBER) REPORTED_MEMBER_NAME
		FROM MEMBER_REPORT
		JOIN MEMBER ON (MEMBER_NO=REPORT_MEMBER)
		WHERE MEMBER_REPORT_NO != 0
		<if test='status != 0'>
			<choose>
				<when test='status==1'>
					AND MEMBER_REPORT_REQUEST IS NULL
				</when>
				<otherwise>
					AND MEMBER_REPORT_REQUEST IS NOT NULL
				</otherwise>
			</choose>
		</if>
		<if test='query != null and query != ""'>
			<choose>
				<when test='key=="t"'>
					AND MEMBER_REPORT_TITLE LIKE '%${query}%'
				</when>
				<when test='key=="c"'>
					AND MEMBER_REPORT_CONTENT LIKE '%${query}%'
				</when>
				<when test='key=="tc"'>
					AND (MEMBER_REPORT_TITLE LIKE '%${query}%' OR MEMBER_REPORT_CONTENT
					LIKE '%${query}%')
				</when>
				<when test='key=="report"'>
					AND MEMBER_NAME LIKE '%${query}%'
				</when>
				<otherwise>
					AND (SELECT MEMBER_NAME FROM MEMBER WHERE MEMBER_NO=REPORTED_MEMBER) LIKE '%${query}%'
				</otherwise>
			</choose>
		</if>
	</select>
	
	<!-- 회원 신고 내역 상세 보기 -->
	<select id="memberReportDetail" resultMap="manager_memberReport_rm">
		SELECT MEMBER_REPORT_NO , MEMBER_REPORT_TITLE ,MEMBER_REPORT_CONTENT , MEMBER_REPORT_REQUEST ,
		 TO_CHAR(MEMBER_REPORT_CREATE_DATE, 'YYYY"-"MM"-"DD') MEMBER_REPORT_CREATE_DATE ,
		MEMBER_REPORT_ANSWER_DATE , MEMBER_REPORT_ANSWER_MEMBER_NO, REPORT_MEMBER , REPORTED_MEMBER, 
		MEMBER_NAME AS REPORT_MEMBER_NAME, 
		(SELECT MEMBER_NAME FROM MEMBER WHERE MEMBER_NO=REPORTED_MEMBER) REPORTED_MEMBER_NAME
		FROM MEMBER_REPORT
		JOIN MEMBER ON (MEMBER_NO=REPORT_MEMBER)
		WHERE MEMBER_REPORT_NO=#{memberReportNo}
	</select>
	
	<!-- 회원 신고 내역 이미지 -->
	<select id="selectReportImageList" resultMap="reportImageFile_rm">
		SELECT * FROM MEMBER_REPORT_FILE
		WHERE MEMBER_REPORT_NO=#{memberReportNo}
	</select>
	
	<!-- 회원 신고 답변 등록 -->
	<update id="insertReportRequest">
		UPDATE MEMBER_REPORT SET
		MEMBER_REPORT_REQUEST=#{memberReportRequest},
		MEMBER_REPORT_ANSWER_DATE=SYSDATE,
		MEMBER_REPORT_ANSWER_MEMBER_NO=#{loginMemer.memberName}
		WHERE MEMBER_REPORT_NO=#{memberReportNo}
	</update>
	
	
	
	<!-- 거래 신고 수 -->
	<select id="getMemberTradeListCount" resultType="_int">
	SELECT COUNT(*) FROM TRADE_REPORT
		<if test='status != 0'>
			<choose>
				<when test='status==1'>
					WHERE REFUND_FL ='N'
				</when>
				<otherwise>
					WHERE REFUND_FL ='Y'
				</otherwise>
			</choose>
		</if>
	</select>
	
	<!-- 거래 신고 내역 조회 -->
	<select id="selectMemberTradeList" resultMap="manager_tradeReport_rm">
	SELECT TRADE_REPORT_NO , TRADE_REPORT_CONTENT , REFUND_FL, TRADE_NO,
		 TO_CHAR(TRADE_REPORT_CREATE_DATE, 'YYYY"-"MM"-"DD') TRADE_REPORT_CREATE_DATE ,
		REPORT_PERSON , REPORTED_PERSON, TRADE_REPORT_TYPE_NO,
		MEMBER_NAME AS TRADE_REPORT_MEMBER_NAME, 
		(SELECT MEMBER_NAME FROM MEMBER WHERE MEMBER_NO=REPORTED_PERSON) TRADE_REPORTED_MEMBER_NAME
		FROM TRADE_REPORT
		JOIN MEMBER ON (MEMBER_NO=REPORT_PERSON)
		WHERE TRADE_REPORT_NO != 0
		<if test='status != 0'>
			<choose>
				<when test='status==1'>
					AND REFUND_FL ='N'
				</when>
				<otherwise>
					AND REFUND_FL ='Y'
				</otherwise>
			</choose>
		</if>
		ORDER BY 1 DESC
	</select>
	
	<!-- 검색 일치 거래 신고 수 -->
	<select id="getMemberTradeListCount2" resultType="_int">
	SELECT COUNT(*) FROM TRADE_REPORT
	JOIN MEMBER ON (MEMBER_NO=REPORT_PERSON)
	WHERE TRADE_REPORT_NO != 0
		<if test='status != 0'>
			<choose>
				<when test='status==1'> AND REFUND_FL ='N' </when>
				<otherwise> AND REFUND_FL ='Y' </otherwise>
			</choose>
		</if>
		<if test='type != 0'>
			<choose>
				<when test='type==1'> AND TRADE_REPORT_TYPE_NO = 1 </when>
				<otherwise> AND TRADE_REPORT_TYPE_NO = 2 </otherwise>
			</choose>
		</if>
		<if test='query != null and query != ""'>
			<choose>
				<when test='key=="c"'> AND TRADE_REPORT_CONTENT LIKE '%${query}%' </when>
				<when test='key=="tn"'> AND TRADE_NO = ${query} </when>
				<when test='key=="tn"'> AND TRADE_REPORT_NO = ${query} </when>
				<when test='key=="report"'> AND MEMBER_NAME LIKE '%${query}%' </when>
				<otherwise> AND (SELECT MEMBER_NAME FROM MEMBER WHERE MEMBER_NO=REPORTED_PERSON) LIKE '%${query}%' </otherwise>
			</choose>
		</if>
	</select>
	
	<!-- 검색 일치 거래 신고 내역 조회 -->
	<select id="selectMemberTradeList2" resultMap="manager_tradeReport_rm">
	SELECT TRADE_REPORT_NO , TRADE_REPORT_CONTENT , REFUND_FL, TRADE_NO,
		 TO_CHAR(TRADE_REPORT_CREATE_DATE, 'YYYY"-"MM"-"DD') TRADE_REPORT_CREATE_DATE ,
		REPORT_PERSON , REPORTED_PERSON, TRADE_REPORT_TYPE_NO,
		MEMBER_NAME AS TRADE_REPORT_MEMBER_NAME, 
		(SELECT MEMBER_NAME FROM MEMBER WHERE MEMBER_NO=REPORTED_PERSON) TRADE_REPORTED_MEMBER_NAME
		FROM TRADE_REPORT
		JOIN MEMBER ON (MEMBER_NO=REPORT_PERSON)
		WHERE TRADE_REPORT_NO != 0
		<if test='status != 0'>
			<choose>
				<when test='status==1'> AND REFUND_FL ='N' </when>
				<otherwise> AND REFUND_FL ='Y' </otherwise>
			</choose>
		</if>
		<if test='type != 0'>
			<choose>
				<when test='type==1'> AND TRADE_REPORT_TYPE_NO = 1 </when>
				<otherwise> AND TRADE_REPORT_TYPE_NO = 2 </otherwise>
			</choose>
		</if>
		<if test='query != null and query != ""'>
			<choose>
				<when test='key=="c"'> AND TRADE_REPORT_CONTENT LIKE '%${query}%' </when>
				<when test='key=="tn"'> AND TRADE_NO = ${query} </when>
				<when test='key=="rn"'> AND TRADE_REPORT_NO = ${query} </when>
				<when test='key=="report"'> AND MEMBER_NAME LIKE '%${query}%' </when>
				<otherwise> AND (SELECT MEMBER_NAME FROM MEMBER WHERE MEMBER_NO=REPORTED_PERSON) LIKE '%${query}%' </otherwise>
			</choose>
		</if>
		ORDER BY 1 DESC
	</select>
	
	<!-- 상태별 거래 신고 수 -->
	<select id="getReportStatusListCount" resultType="_int">
		SELECT COUNT(*) FROM TRADE_REPORT
		WHERE TRADE_REPORT_NO != 0
		<if test='status != 0'>
			<choose>
				<when test='status==1'> AND REFUND_FL ='N' </when>
				<otherwise> AND REFUND_FL ='Y' </otherwise>
			</choose>
		</if>
		<if test='type != 0'>
			<choose>
				<when test='type==1'> AND TRADE_REPORT_TYPE_NO = 1 </when>
				<otherwise> AND TRADE_REPORT_TYPE_NO = 2 </otherwise>
			</choose>
		</if>
	</select>
	
	<!-- 상태별 거래 신고 내역 조회 -->
	<select id="selectReportStatusList" resultMap="manager_tradeReport_rm">
		SELECT TRADE_REPORT_NO , TRADE_REPORT_CONTENT , REFUND_FL, TRADE_NO,
		 TO_CHAR(TRADE_REPORT_CREATE_DATE, 'YYYY"-"MM"-"DD') TRADE_REPORT_CREATE_DATE ,
		REPORT_PERSON , REPORTED_PERSON, TRADE_REPORT_TYPE_NO,
		MEMBER_NAME AS TRADE_REPORT_MEMBER_NAME, 
		(SELECT MEMBER_NAME FROM MEMBER WHERE MEMBER_NO=REPORTED_PERSON) TRADE_REPORTED_MEMBER_NAME
		FROM TRADE_REPORT
		JOIN MEMBER ON (MEMBER_NO=REPORT_PERSON)
		WHERE TRADE_REPORT_NO != 0
		<if test='status != 0'>
			<choose>
				<when test='status==1'> AND REFUND_FL ='N' </when>
				<otherwise> AND REFUND_FL ='Y' </otherwise>
			</choose>
		</if>
		<if test='type != 0'>
			<choose>
				<when test='type==1'> AND TRADE_REPORT_TYPE_NO = 1 </when>
				<otherwise> AND TRADE_REPORT_TYPE_NO = 2 </otherwise>
			</choose>
		</if>
		ORDER BY 1 DESC
	</select>
	
	<!-- 거래 신고 상세 보기 -->
	<select id="tradeReportDetail" resultMap="manager_tradeReport_rm">
			SELECT TRADE_REPORT_NO , TRADE_REPORT_CONTENT , REFUND_FL, TRADE_NO,
		 TO_CHAR(TRADE_REPORT_CREATE_DATE, 'YYYY"-"MM"-"DD') TRADE_REPORT_CREATE_DATE ,
		REPORT_PERSON , REPORTED_PERSON, TRADE_REPORT_TYPE_NO, TRADE_REPORT_FILE_PATH,
		MEMBER_NAME AS TRADE_REPORT_MEMBER_NAME, 
		(SELECT MEMBER_NAME FROM MEMBER WHERE MEMBER_NO=REPORTED_PERSON) TRADE_REPORTED_MEMBER_NAME
		FROM TRADE_REPORT
		JOIN MEMBER ON (MEMBER_NO=REPORT_PERSON)
		WHERE TRADE_REPORT_NO = #{tradeReportNo}
	</select>
	
	
	
	<!-- 리뷰 신고 수 -->
	<select id="getReviewReportListCount" resultType="_int">
	SELECT COUNT(*) FROM REPORT
	</select>	
	
	
	<!-- 리뷰 신고 목록 -->
	<select id="selectReviewReportList" resultMap="manager_reviewReport_rm">
	SELECT REPORT_NO, REVIEW_NO, REPORT_DEL_FL, MEMBER_NO, MEMBER_NAME, REVIEW_CONTENT, REVIEW_IMAGE,
	REVIEW_POINT
	FROM REPORT 
	JOIN REVIEW USING (REVIEW_NO)
	JOIN TRADE ON (TRADE_NO=REVIEW_NO)
	JOIN MEMBER USING (MEMBER_NO)
	WHERE REPORT_DEL_FL='N'
	</select>
	
	<!-- 리뷰 상세 -->
	<select id="reviewReportDetail"  resultMap="manager_reviewReport_rm">
	SELECT REPORT_NO, REVIEW_NO, REPORT_DEL_FL, MEMBER_NO, MEMBER_NAME, REVIEW_CONTENT, REVIEW_IMAGE,
	REVIEW_POINT
	FROM REPORT 
	JOIN REVIEW USING (REVIEW_NO)
	JOIN TRADE ON (TRADE_NO=REVIEW_NO)
	JOIN MEMBER USING (MEMBER_NO)
	WHERE REPORT_NO=${reviewReportNo}
	</select>
	
	<!-- 리뷰 삭제 -->
	<update id="managerReviewDelete">
		UPDATE REPORT SET REPORT_DEL_FL='Y'
		WHERE REPORT_NO=#{reviewReportNo}
	</update>
	
	<!-- 리뷰 상태 삭제 완료 -->
	<update id="updateReviewStatusD">
		UPDATE REVIEW SET REVIEW_STATUS=3
		WHERE REVIEW_NO=#{reviewNo}
	</update>
	
	<!-- 리뷰 보류 -->
	<delete id="managerReviewDelete2">
	DELETE FROM REPORT WHERE REPORT_NO=#{reviewReportNo}
	</delete>
	
	<!-- 리뷰 상태 게시 -->
	<update id="updateReviewStatus">
		UPDATE REVIEW SET REVIEW_STATUS=1
		WHERE REVIEW_NO=#{reviewNo}
	</update>
	
	<!-- 리뷰 번호 얻어 오기 -->
	<select id="getReviewNo" resultType="_int">
		SELECT REVIEW_NO FROM REPORT
		WHERE REPORT_NO=#{reviewReportNo}
	</select>
	
	
	
	

</mapper>


























